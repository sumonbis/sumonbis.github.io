<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial | Sumon Biswas</title>
    <link>https://sumonbis.github.io/category/tutorial/</link>
      <atom:link href="https://sumonbis.github.io/category/tutorial/index.xml" rel="self" type="application/rss+xml" />
    <description>Tutorial</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Â© 2021 Sumon Biswas</copyright><lastBuildDate>Tue, 13 Oct 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://sumonbis.github.io/media/logo.svg</url>
      <title>Tutorial</title>
      <link>https://sumonbis.github.io/category/tutorial/</link>
    </image>
    
    <item>
      <title>How to Add Closed Captions in Your Video Talk</title>
      <link>https://sumonbis.github.io/post/closed-captions/</link>
      <pubDate>Tue, 13 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://sumonbis.github.io/post/closed-captions/</guid>
      <description>&lt;p&gt;YouTube Studio can be used to generate closed captions for your talk by following these simple steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;First, record the video of the talk. The video should have a clear voice recording.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sign in to &lt;a href=&#34;https://studio.youtube.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;YouTube Studio&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on &lt;code&gt;CREATE &amp;gt; Upload videos&lt;/code&gt;. Then upload the recorded talk and fill the standard options (title, description, etc.). Finish the upload and publish it. It will take some time to upload and process the video.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- 













&lt;figure  id=&#34;figure-upload-video-on-youtube-studio&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Upload video on YouTube Studio&#34; srcset=&#34;
               /post/closed-captions/upload_hu08fd69e9e84e7425239b423688b7ff4a_12001_14a869470a1b89444bd8053e0b9be2c5.png 400w,
               /post/closed-captions/upload_hu08fd69e9e84e7425239b423688b7ff4a_12001_bacc2bca902070aa18ce762b949e71d9.png 760w,
               /post/closed-captions/upload_hu08fd69e9e84e7425239b423688b7ff4a_12001_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://sumonbis.github.io/post/closed-captions/upload_hu08fd69e9e84e7425239b423688b7ff4a_12001_14a869470a1b89444bd8053e0b9be2c5.png&#34;
               width=&#34;331&#34;
               height=&#34;93&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Upload video on YouTube Studio
    &lt;/figcaption&gt;&lt;/figure&gt; --&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    To be able to auto-generate the captions, select the &lt;code&gt;Video language&lt;/code&gt; (e.g., English), and &lt;code&gt;Caption certification&lt;/code&gt; (e.g., This content has never aired on television in the U.S.).
  &lt;/div&gt;
&lt;/div&gt;














&lt;figure  id=&#34;figure-steps-for-generating-captions-in-youtube-studio&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Steps for generating captions in YouTube Studio&#34;
           src=&#34;https://sumonbis.github.io/post/closed-captions/process.gif&#34;
           loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Steps for generating captions in YouTube Studio
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;After the video is published, select &lt;code&gt;Videos&lt;/code&gt; from the left menu and click on the video. It will open the video editing options.&lt;/li&gt;
&lt;/ol&gt;














&lt;figure  id=&#34;figure-video-editing-options&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Video editing options&#34; srcset=&#34;
               /post/closed-captions/editing_hudc065b6217f6da97f5e9c3d73465d578_22345_3d670f216c10cc93f023eaaf0526bb8b.png 400w,
               /post/closed-captions/editing_hudc065b6217f6da97f5e9c3d73465d578_22345_b48179162dd89ab02128900adb791046.png 760w,
               /post/closed-captions/editing_hudc065b6217f6da97f5e9c3d73465d578_22345_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://sumonbis.github.io/post/closed-captions/editing_hudc065b6217f6da97f5e9c3d73465d578_22345_3d670f216c10cc93f023eaaf0526bb8b.png&#34;
               width=&#34;760&#34;
               height=&#34;115&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Video editing options
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Click &lt;code&gt;Subtitles&lt;/code&gt; from the left menu. You should see &lt;code&gt;English(Automatic)&lt;/code&gt; subtitle option there. Click &lt;code&gt;DUPLICATE AND EDIT&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    This option might not be available immediately after uploading a video. For me, YouTube Studio took around half an hour to make the subtitle available for a 15-min video.
  &lt;/div&gt;
&lt;/div&gt;














&lt;figure  id=&#34;figure-generate-subtitles&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Generate subtitles&#34; srcset=&#34;
               /post/closed-captions/subtitles_hu497f034dd612990d1e15ac6f0579d693_42581_e90dbf9fa7cfe5ec320ad045a2288857.png 400w,
               /post/closed-captions/subtitles_hu497f034dd612990d1e15ac6f0579d693_42581_5af088a46693f0902883d5f0a5929749.png 760w,
               /post/closed-captions/subtitles_hu497f034dd612990d1e15ac6f0579d693_42581_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://sumonbis.github.io/post/closed-captions/subtitles_hu497f034dd612990d1e15ac6f0579d693_42581_e90dbf9fa7cfe5ec320ad045a2288857.png&#34;
               width=&#34;760&#34;
               height=&#34;212&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Generate subtitles
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;You should see the automatically generated text from the speech. You have two options to finalize the captions:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;You can edit the text to make corrections: adding punctuations, capitalization, misspelled words, etc. The text will be automatically synced with the timing. However, you can modify the timings too. Note that, in one timeframe, you should not put a lot of characters which will cover much space on the screen.&lt;/li&gt;
&lt;li&gt;Alternatively, you can delete the automatically generated text and add your text manually by clicking on &lt;code&gt;+CAPTION&lt;/code&gt;. Then write the text, start time, and end time.&lt;/li&gt;
&lt;/ul&gt;














&lt;figure  id=&#34;figure-edit-subtitles&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Edit subtitles&#34; srcset=&#34;
               /post/closed-captions/timing_hu8393fbf032e093c702c75fdff53cba05_64692_2221ea3bec630bb61bd1f5818125c1bf.png 400w,
               /post/closed-captions/timing_hu8393fbf032e093c702c75fdff53cba05_64692_1c789b521e0ff1e46e3d1ffaa14ec2cc.png 760w,
               /post/closed-captions/timing_hu8393fbf032e093c702c75fdff53cba05_64692_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://sumonbis.github.io/post/closed-captions/timing_hu8393fbf032e093c702c75fdff53cba05_64692_2221ea3bec630bb61bd1f5818125c1bf.png&#34;
               width=&#34;529&#34;
               height=&#34;308&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Edit subtitles
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;
&lt;p&gt;Save the draft and click &lt;code&gt;PUBLISH&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finally, click on &lt;code&gt;Options&lt;/code&gt; beside the &lt;code&gt;EDIT&lt;/code&gt; button and click &lt;code&gt;Download&lt;/code&gt;. Then select &lt;code&gt;.srt&lt;/code&gt; format. Thus, you get your closed caption for your talk in a &lt;code&gt;.srt&lt;/code&gt; file.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    The &lt;code&gt;.srt&lt;/code&gt; file is editable with a text editor as well. Be careful with the formatting and finally check whether the captions are working on a video player on your computer.
  &lt;/div&gt;
&lt;/div&gt;
&lt;!-- https://support.google.com/youtube/answer/2734796?hl=en#zippy= --&gt;
&lt;p&gt;Here is an &lt;a href=&#34;https://youtu.be/C7lfPoMbpIA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;example talk&lt;/a&gt; with closed captions. Click on the CC button on the video if the closed captions are not enabled on YouTube. You can get other details about YouTube Studio captioning &lt;a href=&#34;https://support.google.com/youtube/answer/2734796?hl=en&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;other-options&#34;&gt;Other Options&lt;/h2&gt;
&lt;p&gt;Apart from YouTube Studio, there are other tools too for generating captions (&lt;code&gt;.srt&lt;/code&gt;).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://maestrasuite.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Maestra&lt;/a&gt; is an online service to generate and export subtitles. You can sign in, upload your video talk, transcribe, edit the auto-generated subtitles, and then export &lt;code&gt;.srt&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://otter.ai/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Otter.ai&lt;/a&gt; can be used to do the task. You can find the instructions &lt;a href=&#34;https://blog.otter.ai/video-captions/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. Although its a paid service, there could be some free trials.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.rev.com/caption&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rev&lt;/a&gt; is another paid service to generate captions manually by human experts.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Other tools can be also used. Depending on the backend transcribe engine, the correctness can vary. However, you should edit the auto-generated text to finalize the closed captions.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Boa for Big-Code Mining and Large-Scale Static Analysis</title>
      <link>https://sumonbis.github.io/post/boa-tutorial/</link>
      <pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate>
      <guid>https://sumonbis.github.io/post/boa-tutorial/</guid>
      <description>&lt;p&gt;This tutorial will describe how to create your own Boa dataset for specific projects in Github and run Boa queries on that dataset locally. We will use command line and Eclipse IDE for that purpose.&lt;/p&gt;
&lt;h2 id=&#34;prerequisite&#34;&gt;Prerequisite&lt;/h2&gt;
&lt;p&gt;You need to have following already installed in your system:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;JDK&lt;/li&gt;
&lt;li&gt;Apache Ant&lt;/li&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;li&gt;Eclipse IDE&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;development-setup-steps&#34;&gt;Development Setup Steps&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Clone the Boa project using the command line: &lt;code&gt;git clone https://github.com/boalang/compiler.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Go to the cloned repository: &lt;code&gt;cd compiler&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Clean the project: &lt;code&gt;ant clean&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a directory for libraries: &lt;code&gt;mkdir -p build/classes&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Compile the project: &lt;code&gt;ant compile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a class folder: &lt;code&gt;mkdir compile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;In Eclipse go to: File &amp;gt; Open Projects from File System &amp;gt; Import Source â Directory &amp;gt; Browse the cloned repository (compiler) &amp;gt; Hit Finish&lt;/li&gt;
&lt;/ol&gt;














&lt;figure  id=&#34;figure-import-compiler-project-in-eclipse&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Import compiler project in Eclipse&#34; srcset=&#34;
               /post/boa-tutorial/import_hu18ade01ed00817a4bb1fa04cbf19de50_100306_8b8e2b26342e735bcc4f07d6f49124d5.png 400w,
               /post/boa-tutorial/import_hu18ade01ed00817a4bb1fa04cbf19de50_100306_36ddbde6110206d333a9f39ed372eb8e.png 760w,
               /post/boa-tutorial/import_hu18ade01ed00817a4bb1fa04cbf19de50_100306_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://sumonbis.github.io/post/boa-tutorial/import_hu18ade01ed00817a4bb1fa04cbf19de50_100306_8b8e2b26342e735bcc4f07d6f49124d5.png&#34;
               width=&#34;760&#34;
               height=&#34;529&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Import compiler project in Eclipse
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;!-- &lt;p align=&#34;center&#34;&gt;
&lt;img src=&#34;img/import.png&#34; title=&#34;Import compiler project in Eclipse&#34;&gt;
&lt;/p&gt; --&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;Right click on the project compiler &amp;gt; Build Path &amp;gt; Configure Build Path&lt;/li&gt;
&lt;li&gt;In Source tab, click Add Folder to add the required source folders and remove unnecessary folder(s). After adding all the folders, the window should look like the following:&lt;/li&gt;
&lt;/ol&gt;














&lt;figure  id=&#34;figure-after-configuring-eclipse&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;After configuring Eclipse&#34; srcset=&#34;
               /post/boa-tutorial/after_config_huc30bb9b6770fa560d57158247648e19e_254071_0f267088009d39f4d6144eed5cf2e29e.png 400w,
               /post/boa-tutorial/after_config_huc30bb9b6770fa560d57158247648e19e_254071_8beb014657c4a32573ee7449d578aefd.png 760w,
               /post/boa-tutorial/after_config_huc30bb9b6770fa560d57158247648e19e_254071_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://sumonbis.github.io/post/boa-tutorial/after_config_huc30bb9b6770fa560d57158247648e19e_254071_0f267088009d39f4d6144eed5cf2e29e.png&#34;
               width=&#34;760&#34;
               height=&#34;438&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      After configuring Eclipse
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;!-- &lt;p align=&#34;center&#34;&gt;
&lt;img src=&#34;img/after_config.png&#34; title=&#34;After configuring Eclipse&#34;&gt;
&lt;/p&gt; --&gt;
&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;Select Libraries tab in the same window and click on Add Class Folder and add the compiler/compile folder that has been created in step 6.&lt;/li&gt;
&lt;li&gt;Click Add JARsâ¦ in the same Libraries tab &amp;gt; select lib &amp;gt; select all the files inside lib, including files under datagen and evaluator folder &amp;gt; hit Apply and Close.&lt;/li&gt;
&lt;li&gt;From the compiler project in Eclipse, right click on build.xml &amp;gt; Run as &amp;gt; 1 Ant build. This should build the project successfully. The development setup is completed. Now, we will move on to data generation steps.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;boa-data-generation-steps&#34;&gt;Boa Data Generation Steps&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Go to github.com and search the project for which you want to create the dataset. For example, if you want to create dataset for Apache Mavan project, go to &lt;a href=&#34;https://github.com/apache/maven&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/apache/maven&lt;/a&gt; .&lt;/li&gt;
&lt;li&gt;Invoke a GitHub http-based RESTful API to get the metadata of the project by constructing a URL &lt;a href=&#34;https://api.github.com/repos/repo_full_name&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://api.github.com/repos/repo_full_name&lt;/a&gt;, for example &lt;a href=&#34;https://api.github.com/repos/apache/maven&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://api.github.com/repos/apache/maven&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Copy the whole JSON metadata, create a blank text file, type a pair of brackets â[]â, paste the metadata inside the brackets.&lt;/li&gt;
&lt;li&gt;Search for &amp;ldquo;languages_url&amp;rdquo; field in the JSON data, go to the URL, copy everything, create another field in the JSON file (&amp;ldquo;language_list&amp;rdquo;: ), paste copied text and save the file as filename.json (e.g., maven.json). The last few lines of the JSON file should look like:&lt;/li&gt;
&lt;/ol&gt;














&lt;figure  id=&#34;figure-json-file&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;JSON file&#34; srcset=&#34;
               /post/boa-tutorial/json_looklike_hu2ab2130319f6cfb527ad0ef2986ae93a_168440_f49bec1fdd27f7b5c178995e13009bd9.png 400w,
               /post/boa-tutorial/json_looklike_hu2ab2130319f6cfb527ad0ef2986ae93a_168440_20af3c33d6658053b2194ed22c8b5fb8.png 760w,
               /post/boa-tutorial/json_looklike_hu2ab2130319f6cfb527ad0ef2986ae93a_168440_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://sumonbis.github.io/post/boa-tutorial/json_looklike_hu2ab2130319f6cfb527ad0ef2986ae93a_168440_f49bec1fdd27f7b5c178995e13009bd9.png&#34;
               width=&#34;600&#34;
               height=&#34;395&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      JSON file
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;!-- &lt;p align=&#34;center&#34;&gt;
&lt;img src=&#34;img/json_looklike.png&#34; title=&#34;JSON file&#34;&gt;
&lt;/p&gt; --&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;In this way, for each project, that will be included in the dataset, create a JSON file. So, if you want to create a dataset for 5 projects, you will create 5 separate JSON files. Save all the JSON files in a folder. Alternatively, you can create a single JSON file for all of the projects by separating them by comma in an array â[]â. The format looks like [{}, {}]. Each curly brace is for one project.&lt;/li&gt;
&lt;li&gt;In Eclipse, go to the project compiler &amp;gt; src/java &amp;gt; boa.datagen, right click on BoaGenerator.java &amp;gt; Run As &amp;gt; Run Configurations.&lt;/li&gt;
&lt;li&gt;Double click on Java Application to create a new configuration. Browse project and select compiler, Search Main Class and select boa.datagen.BoaGenerator.&lt;/li&gt;
&lt;/ol&gt;














&lt;figure  id=&#34;figure-data-generator-configuration&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Data generator configuration&#34; srcset=&#34;
               /post/boa-tutorial/datagen_hu949fdfc0778c85be9ad23ef2b524f8af_286100_975fb2b00653598ae3d0aaaf66cd565c.png 400w,
               /post/boa-tutorial/datagen_hu949fdfc0778c85be9ad23ef2b524f8af_286100_a821359fabc7942f9039a41f15b7635b.png 760w,
               /post/boa-tutorial/datagen_hu949fdfc0778c85be9ad23ef2b524f8af_286100_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://sumonbis.github.io/post/boa-tutorial/datagen_hu949fdfc0778c85be9ad23ef2b524f8af_286100_975fb2b00653598ae3d0aaaf66cd565c.png&#34;
               width=&#34;718&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Data generator configuration
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;Select Arguments tab and add program arguments. The program arguments format should look like:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;  -inputJson 	&amp;lt;directory containing project JSON files&amp;gt;
  -output 	&amp;lt;output directory of the dataset (folder will be automatically created)&amp;gt;
  -inputRepo 	&amp;lt;temporary directory used to clone the projects (this folder will be automatically created)&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The other arguments are optional. For example, to print debug messages in console use -debug.&lt;/p&gt;

 
 
 
 
 
 
 
 
 
 
 
 
 
 &lt;figure  id=&#34;figure-data-generator-parameters&#34;&gt;
   &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
     &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Data generator parameters&#34; srcset=&#34;
                /post/boa-tutorial/datagenparam_hu0ab8dbc86191e859d9cf2dbaf834ceed_190851_9bcc7799a517c20c420a928e34056f90.png 400w,
                /post/boa-tutorial/datagenparam_hu0ab8dbc86191e859d9cf2dbaf834ceed_190851_f15015d26c48b89e9bc0530707a356ba.png 760w,
                /post/boa-tutorial/datagenparam_hu0ab8dbc86191e859d9cf2dbaf834ceed_190851_1200x1200_fit_lanczos_3.png 1200w&#34;
                src=&#34;https://sumonbis.github.io/post/boa-tutorial/datagenparam_hu0ab8dbc86191e859d9cf2dbaf834ceed_190851_9bcc7799a517c20c420a928e34056f90.png&#34;
                width=&#34;760&#34;
                height=&#34;650&#34;
                loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
   &lt;/div&gt;&lt;figcaption&gt;
       Data generator parameters
     &lt;/figcaption&gt;&lt;/figure&gt;
&lt;ol start=&#34;9&#34;&gt;
&lt;li&gt;Hit Run.&lt;/li&gt;
&lt;li&gt;This should start cloning the projects form Github and generating dataset. Depending on the number of projects and size of the projects, this will take some time to finish. When the red Terminate option in the console goes off, the data generation process is finished.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;run-boa-query-on-new-dataset&#34;&gt;Run Boa Query on New Dataset&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Create a dataset folder copying three files (projects.seq, ast/data, ast/index) from the generated output folder from step 8 of data generation process.&lt;/li&gt;
&lt;li&gt;In Eclipse, go to the project compiler &amp;gt; src/java &amp;gt; boa.evaluator, right click on BoaEvaluator.java &amp;gt; Run As &amp;gt; Run Configurationsâ¦&lt;/li&gt;
&lt;li&gt;Create a new configuration by clicking the New Configuration in the upper left corner of the window.&lt;/li&gt;
&lt;li&gt;Give a Name to the configuration, Browse project and select compiler, Search Main Class and select boa.evaluator.BoaEvaluator.&lt;/li&gt;
&lt;li&gt;Select Arguments tab and add program arguments. The program arguments format should look like:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;-input &amp;lt;file path to the boa source code file&amp;gt;
-data &amp;lt;dataset directory containing three files(projects.seq, data, index)&amp;gt;
-output &amp;lt;output directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

 
 
 
 
 
 
 
 
 
 
 
 
 
 &lt;figure  id=&#34;figure-data-evaluator-parameters&#34;&gt;
   &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
     &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Data evaluator parameters&#34; srcset=&#34;
                /post/boa-tutorial/evalparam_hue8c49e7c5cd92ffdb7d8309808005f8d_259498_bd1849e8859a8e0de8f2553ea8b570e1.png 400w,
                /post/boa-tutorial/evalparam_hue8c49e7c5cd92ffdb7d8309808005f8d_259498_38c40ac3b74c73d956959061788cdf42.png 760w,
                /post/boa-tutorial/evalparam_hue8c49e7c5cd92ffdb7d8309808005f8d_259498_1200x1200_fit_lanczos_3.png 1200w&#34;
                src=&#34;https://sumonbis.github.io/post/boa-tutorial/evalparam_hue8c49e7c5cd92ffdb7d8309808005f8d_259498_bd1849e8859a8e0de8f2553ea8b570e1.png&#34;
                width=&#34;760&#34;
                height=&#34;467&#34;
                loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
   &lt;/div&gt;&lt;figcaption&gt;
       Data evaluator parameters
     &lt;/figcaption&gt;&lt;/figure&gt;
 &lt;!-- &lt;p align=&#34;center&#34;&gt;
&lt;img src=&#34;img/evalparam.png&#34; title=&#34;Data evaluator parameters&#34;&gt;
&lt;/p&gt; --&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;The output of the query will be printed in the console.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The screencast to go over the above steps and setup Boa development environment is shown in the following video.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/vuHUx-NYrOo&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

</description>
    </item>
    
  </channel>
</rss>
